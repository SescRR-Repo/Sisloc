// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sisloc.Data;

#nullable disable

namespace Sisloc.Migrations
{
    [DbContext(typeof(SislocDbContext))]
    partial class SislocDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sisloc.Models.Agendamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaVeiculo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataChegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPartida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("MotoristaAlocadoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeSolicitante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ObservacoesAdmin")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("PrecisaMotorista")
                        .HasColumnType("bit");

                    b.Property<string>("Protocolo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("QuantidadePessoas")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("VeiculoAlocadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataPartida");

                    b.HasIndex("MotoristaAlocadoId");

                    b.HasIndex("Protocolo")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.HasIndex("VeiculoAlocadoId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Sisloc.Models.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoriaCnh")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("DataExameToxicologico")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroCnh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("VencimentoCnh")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NumeroCnh")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.ToTable("Motoristas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaCnh = "B",
                            DataExameToxicologico = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "João Silva Santos",
                            NumeroCnh = "12345678901",
                            Status = 1,
                            Telefone = "(11) 99999-9999",
                            VencimentoCnh = new DateTime(2026, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CategoriaCnh = "C",
                            DataExameToxicologico = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Maria Oliveira Costa",
                            NumeroCnh = "98765432109",
                            Status = 1,
                            Telefone = "(11) 88888-8888",
                            VencimentoCnh = new DateTime(2025, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Sisloc.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadePassageiros")
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Categoria");

                    b.HasIndex("Placa")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadePassageiros = 5,
                            Categoria = 1,
                            Modelo = "Gol 1.0",
                            Placa = "ABC-1234",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CapacidadePassageiros = 5,
                            Categoria = 2,
                            Modelo = "Corolla XEI",
                            Placa = "DEF-5678",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CapacidadePassageiros = 5,
                            Categoria = 4,
                            Modelo = "Hilux SR",
                            Placa = "GHI-9012",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Sisloc.Models.Agendamento", b =>
                {
                    b.HasOne("Sisloc.Models.Motorista", "MotoristaAlocado")
                        .WithMany("Agendamentos")
                        .HasForeignKey("MotoristaAlocadoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Sisloc.Models.Veiculo", "VeiculoAlocado")
                        .WithMany("Agendamentos")
                        .HasForeignKey("VeiculoAlocadoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("MotoristaAlocado");

                    b.Navigation("VeiculoAlocado");
                });

            modelBuilder.Entity("Sisloc.Models.Motorista", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("Sisloc.Models.Veiculo", b =>
                {
                    b.Navigation("Agendamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
